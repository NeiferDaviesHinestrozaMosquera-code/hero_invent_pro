{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\hero_invent_pro\\\\hero_invent_pro\\\\src\\\\pages\\\\categories.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDisclosure, Modal, ModalContent, ModalHeader, ModalBody, ModalFooter, Button, Input, Textarea } from '@heroui/react';\nimport { PageHeader } from '../components/page-header';\nimport { DataTable } from '../components/data-table';\n\n// Configura esto según tu entorno\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8000';\nexport const Categories = () => {\n  _s();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [categoryList, setCategoryList] = React.useState([]);\n  const [selectedCategory, setSelectedCategory] = React.useState(null);\n  const [formData, setFormData] = React.useState({\n    name: '',\n    description: ''\n  });\n  const [loading, setLoading] = React.useState(true);\n  const [saveLoading, setSaveLoading] = React.useState(false);\n  const [error, setError] = React.useState('');\n\n  // Función para obtener categorías desde la API\n  const fetchCategories = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const response = await fetch(`${API_BASE_URL}/api/categories`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `Error HTTP: ${response.status}`);\n      }\n      const result = await response.json();\n\n      // El backend devuelve { success: true, data: [...], message: '...' }\n      if (result.success) {\n        setCategoryList(result.data || []);\n        setError('');\n      } else {\n        throw new Error(result.message || 'Error al obtener categorías');\n      }\n    } catch (error) {\n      const errorMessage = error.message || 'Error de conexión con el servidor';\n      setError(errorMessage);\n      console.error(\"Error fetching categories:\", error);\n      setCategoryList([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener categorías al cargar el componente\n  React.useEffect(() => {\n    fetchCategories();\n  }, []);\n  const handleRowAction = async (action, category) => {\n    if (action === 'edit') {\n      setSelectedCategory(category);\n      setFormData({\n        name: category.name,\n        description: category.description || ''\n      });\n      setError(''); // Limpiar errores previos\n      onOpen();\n    } else if (action === 'delete') {\n      if (confirm('¿Está seguro de eliminar esta categoría? Esta acción no se puede deshacer.')) {\n        try {\n          setError('');\n          const response = await fetch(`${API_BASE_URL}/api/categories/${category.id}`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          const result = await response.json();\n          if (!response.ok) {\n            throw new Error(result.message || `Error HTTP: ${response.status}`);\n          }\n          if (result.success) {\n            // Recargar la lista después de eliminar\n            await fetchCategories();\n            setError('');\n          } else {\n            throw new Error(result.message || 'Error al eliminar categoría');\n          }\n        } catch (error) {\n          const errorMessage = error.message || 'Error al eliminar la categoría';\n          setError(errorMessage);\n          console.error(\"Error deleting category:\", error);\n        }\n      }\n    }\n  };\n  const handleAddCategory = () => {\n    setSelectedCategory(null);\n    setFormData({\n      name: '',\n      description: ''\n    });\n    setError(''); // Limpiar errores previos\n    onOpen();\n  };\n  const handleSaveCategory = async () => {\n    // Validación en el frontend\n    if (!formData.name.trim()) {\n      setError('El nombre es requerido');\n      return;\n    }\n    try {\n      setSaveLoading(true);\n      setError('');\n      const url = selectedCategory ? `${API_BASE_URL}/api/categories/${selectedCategory.id}` : `${API_BASE_URL}/api/categories`;\n      const method = selectedCategory ? 'PUT' : 'POST';\n      console.log('Enviando datos:', formData);\n      console.log('URL:', url, 'Method:', method);\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formData.name.trim(),\n          description: formData.description.trim() || null\n        })\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.message || `Error HTTP: ${response.status}`);\n      }\n      if (result.success) {\n        // Recargar los datos después de guardar\n        await fetchCategories();\n        onClose();\n        // Limpiar el formulario\n        setFormData({\n          name: '',\n          description: ''\n        });\n        setSelectedCategory(null);\n      } else {\n        throw new Error(result.message || 'Error al guardar categoría');\n      }\n    } catch (error) {\n      const errorMessage = error.message || 'Error al guardar la categoría';\n      setError(errorMessage);\n      console.error(\"Error saving category:\", error);\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n  const handleCloseModal = () => {\n    setError(''); // Limpiar errores al cerrar\n    setFormData({\n      name: '',\n      description: ''\n    });\n    setSelectedCategory(null);\n    onClose();\n  };\n  const columns = [{\n    key: 'name',\n    label: 'Nombre',\n    sortable: true\n  }, {\n    key: 'description',\n    label: 'Descripción',\n    renderCell: category => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: category.description ? '' : 'text-foreground-500',\n      children: category.description || 'Sin descripción'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this)\n  }, {\n    key: 'productCount',\n    label: 'Productos',\n    renderCell: category => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-foreground-500\",\n      children: category.product_count !== undefined ? category.product_count : category.products ? category.products.length : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 mb-4 text-red-700 bg-red-100 border border-red-300 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Categor\\xEDas\",\n      description: \"Gesti\\xF3n de categor\\xEDas de productos\",\n      actionLabel: \"Nueva Categor\\xEDa\",\n      onAction: handleAddCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: categoryList,\n      columns: columns,\n      onRowAction: handleRowAction,\n      searchable: true,\n      searchPlaceholder: \"Buscar categor\\xEDas...\",\n      isLoading: loading,\n      loadingContent: \"Cargando categor\\xEDas...\",\n      emptyContent: \"No hay categor\\xEDas registradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: onClose => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            className: \"flex flex-col gap-1\",\n            children: selectedCategory ? 'Editar Categoría' : 'Nueva Categoría'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-3 text-red-700 bg-red-100 border border-red-300 rounded-md text-sm\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                label: \"Nombre\",\n                placeholder: \"Nombre de la categor\\xEDa\",\n                value: formData.name,\n                onValueChange: value => {\n                  setFormData(prev => ({\n                    ...prev,\n                    name: value\n                  }));\n                  // Limpiar error si el usuario empieza a escribir\n                  if (error && error.includes('requerido')) {\n                    setError('');\n                  }\n                },\n                isRequired: true,\n                isInvalid: !formData.name.trim() && error.includes('requerido'),\n                color: !formData.name.trim() && error.includes('requerido') ? 'danger' : 'default'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n                label: \"Descripci\\xF3n\",\n                placeholder: \"Descripci\\xF3n de la categor\\xEDa (opcional)\",\n                value: formData.description,\n                onValueChange: value => setFormData(prev => ({\n                  ...prev,\n                  description: value\n                })),\n                minRows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"flat\",\n              onPress: handleCloseModal,\n              isDisabled: saveLoading,\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onPress: handleSaveCategory,\n              isLoading: saveLoading,\n              loadingContent: \"Guardando...\",\n              children: selectedCategory ? 'Actualizar' : 'Crear'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(Categories, \"5t0FaIMR6pHS8qFpxGwth30L3TI=\", false, function () {\n  return [useDisclosure];\n});\n_c = Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useDisclosure","Modal","ModalContent","ModalHeader","ModalBody","ModalFooter","Button","Input","Textarea","PageHeader","DataTable","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","import","meta","env","VITE_API_BASE_URL","Categories","_s","isOpen","onOpen","onClose","categoryList","setCategoryList","useState","selectedCategory","setSelectedCategory","formData","setFormData","name","description","loading","setLoading","saveLoading","setSaveLoading","error","setError","fetchCategories","response","fetch","method","headers","ok","errorData","json","catch","Error","message","status","result","success","data","errorMessage","console","useEffect","handleRowAction","action","category","confirm","id","handleAddCategory","handleSaveCategory","trim","url","log","body","JSON","stringify","handleCloseModal","columns","key","label","sortable","renderCell","className","children","fileName","_jsxFileName","lineNumber","columnNumber","product_count","undefined","products","length","title","actionLabel","onAction","onRowAction","searchable","searchPlaceholder","isLoading","loadingContent","emptyContent","placeholder","value","onValueChange","prev","includes","isRequired","isInvalid","color","minRows","variant","onPress","isDisabled","_c","$RefreshReg$"],"sources":["C:/Users/User/hero_invent_pro/hero_invent_pro/src/pages/categories.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  useDisclosure, \n  Modal, \n  ModalContent, \n  ModalHeader, \n  ModalBody, \n  ModalFooter, \n  Button, \n  Input, \n  Textarea \n} from '@heroui/react';\nimport { PageHeader } from '../components/page-header';\nimport { DataTable } from '../components/data-table';\n\n// Configura esto según tu entorno\nconst API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8000';\n\ninterface Category {\n  id: string;\n  name: string;\n  description?: string;\n  products?: any[];\n  product_count?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\nexport const Categories: React.FC = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [categoryList, setCategoryList] = React.useState<Category[]>([]);\n  const [selectedCategory, setSelectedCategory] = React.useState<Category | null>(null);\n  const [formData, setFormData] = React.useState({ \n    name: '', \n    description: '' \n  });\n  const [loading, setLoading] = React.useState(true);\n  const [saveLoading, setSaveLoading] = React.useState(false);\n  const [error, setError] = React.useState('');\n\n  // Función para obtener categorías desde la API\n  const fetchCategories = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      const response = await fetch(`${API_BASE_URL}/api/categories`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `Error HTTP: ${response.status}`);\n      }\n\n      const result = await response.json();\n      \n      // El backend devuelve { success: true, data: [...], message: '...' }\n      if (result.success) {\n        setCategoryList(result.data || []);\n        setError('');\n      } else {\n        throw new Error(result.message || 'Error al obtener categorías');\n      }\n    } catch (error: any) {\n      const errorMessage = error.message || 'Error de conexión con el servidor';\n      setError(errorMessage);\n      console.error(\"Error fetching categories:\", error);\n      setCategoryList([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener categorías al cargar el componente\n  React.useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  const handleRowAction = async (action: string, category: Category) => {\n    if (action === 'edit') {\n      setSelectedCategory(category);\n      setFormData({\n        name: category.name,\n        description: category.description || ''\n      });\n      setError(''); // Limpiar errores previos\n      onOpen();\n    } \n    else if (action === 'delete') {\n      if (confirm('¿Está seguro de eliminar esta categoría? Esta acción no se puede deshacer.')) {\n        try {\n          setError('');\n          \n          const response = await fetch(`${API_BASE_URL}/api/categories/${category.id}`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n          \n          const result = await response.json();\n          \n          if (!response.ok) {\n            throw new Error(result.message || `Error HTTP: ${response.status}`);\n          }\n\n          if (result.success) {\n            // Recargar la lista después de eliminar\n            await fetchCategories();\n            setError('');\n          } else {\n            throw new Error(result.message || 'Error al eliminar categoría');\n          }\n        } catch (error: any) {\n          const errorMessage = error.message || 'Error al eliminar la categoría';\n          setError(errorMessage);\n          console.error(\"Error deleting category:\", error);\n        }\n      }\n    }\n  };\n\n  const handleAddCategory = () => {\n    setSelectedCategory(null);\n    setFormData({ name: '', description: '' });\n    setError(''); // Limpiar errores previos\n    onOpen();\n  };\n\n  const handleSaveCategory = async () => {\n    // Validación en el frontend\n    if (!formData.name.trim()) {\n      setError('El nombre es requerido');\n      return;\n    }\n\n    try {\n      setSaveLoading(true);\n      setError('');\n      \n      const url = selectedCategory \n        ? `${API_BASE_URL}/api/categories/${selectedCategory.id}`\n        : `${API_BASE_URL}/api/categories`;\n      \n      const method = selectedCategory ? 'PUT' : 'POST';\n      \n      console.log('Enviando datos:', formData);\n      console.log('URL:', url, 'Method:', method);\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: formData.name.trim(),\n          description: formData.description.trim() || null\n        }),\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.message || `Error HTTP: ${response.status}`);\n      }\n      \n      if (result.success) {\n        // Recargar los datos después de guardar\n        await fetchCategories();\n        onClose();\n        // Limpiar el formulario\n        setFormData({ name: '', description: '' });\n        setSelectedCategory(null);\n      } else {\n        throw new Error(result.message || 'Error al guardar categoría');\n      }\n    } catch (error: any) {\n      const errorMessage = error.message || 'Error al guardar la categoría';\n      setError(errorMessage);\n      console.error(\"Error saving category:\", error);\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setError(''); // Limpiar errores al cerrar\n    setFormData({ name: '', description: '' });\n    setSelectedCategory(null);\n    onClose();\n  };\n\n  const columns = [\n    { \n      key: 'name', \n      label: 'Nombre', \n      sortable: true \n    },\n    { \n      key: 'description', \n      label: 'Descripción',\n      renderCell: (category: Category) => (\n        <span className={category.description ? '' : 'text-foreground-500'}>\n          {category.description || 'Sin descripción'}\n        </span>\n      )\n    },\n    { \n      key: 'productCount', \n      label: 'Productos', \n      renderCell: (category: Category) => (\n        <span className=\"text-foreground-500\">\n          {category.product_count !== undefined ? category.product_count : \n           (category.products ? category.products.length : 0)}\n        </span>\n      ) \n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Mostrar errores */}\n      {error && (\n        <div className=\"p-4 mb-4 text-red-700 bg-red-100 border border-red-300 rounded-lg\">\n          <strong>Error:</strong> {error}\n        </div>\n      )}\n      \n      <PageHeader \n        title=\"Categorías\" \n        description=\"Gestión de categorías de productos\" \n        actionLabel=\"Nueva Categoría\" \n        onAction={handleAddCategory} \n      />\n      \n      <DataTable \n        data={categoryList}\n        columns={columns}\n        onRowAction={handleRowAction}\n        searchable\n        searchPlaceholder=\"Buscar categorías...\"\n        isLoading={loading}\n        loadingContent=\"Cargando categorías...\"\n        emptyContent=\"No hay categorías registradas\"\n      />\n      \n      <Modal isOpen={isOpen} onClose={handleCloseModal}>\n        <ModalContent>\n          {(onClose) => (\n            <>\n              <ModalHeader className=\"flex flex-col gap-1\">\n                {selectedCategory ? 'Editar Categoría' : 'Nueva Categoría'}\n              </ModalHeader>\n              \n              <ModalBody>\n                <div className=\"space-y-4\">\n                  {/* Mostrar errores del modal */}\n                  {error && (\n                    <div className=\"p-3 text-red-700 bg-red-100 border border-red-300 rounded-md text-sm\">\n                      {error}\n                    </div>\n                  )}\n                  \n                  <Input\n                    label=\"Nombre\"\n                    placeholder=\"Nombre de la categoría\"\n                    value={formData.name}\n                    onValueChange={(value) => {\n                      setFormData(prev => ({ ...prev, name: value }));\n                      // Limpiar error si el usuario empieza a escribir\n                      if (error && error.includes('requerido')) {\n                        setError('');\n                      }\n                    }}\n                    isRequired\n                    isInvalid={!formData.name.trim() && error.includes('requerido')}\n                    color={!formData.name.trim() && error.includes('requerido') ? 'danger' : 'default'}\n                  />\n                  \n                  <Textarea\n                    label=\"Descripción\"\n                    placeholder=\"Descripción de la categoría (opcional)\"\n                    value={formData.description}\n                    onValueChange={(value) => setFormData(prev => ({ \n                      ...prev, \n                      description: value \n                    }))}\n                    minRows={3}\n                  />\n                </div>\n              </ModalBody>\n              \n              <ModalFooter>\n                <Button \n                  variant=\"flat\" \n                  onPress={handleCloseModal} \n                  isDisabled={saveLoading}\n                >\n                  Cancelar\n                </Button>\n                \n                <Button \n                  color=\"primary\" \n                  onPress={handleSaveCategory}\n                  isLoading={saveLoading}\n                  loadingContent=\"Guardando...\"\n                >\n                  {selectedCategory ? 'Actualizar' : 'Crear'}\n                </Button>\n              </ModalFooter>\n            </>\n          )}\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}