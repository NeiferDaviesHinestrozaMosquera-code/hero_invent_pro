{"ast":null,"code":"// src/index.ts\nimport { useCallback, useEffect, useState } from \"react\";\nvar ThemeProps = {\n  // localStorage key for storing the current theme\n  KEY: \"heroui-theme\",\n  // light theme\n  LIGHT: \"light\",\n  // dark theme\n  DARK: \"dark\",\n  // system theme\n  SYSTEM: \"system\"\n};\nfunction useTheme(defaultTheme = ThemeProps.SYSTEM) {\n  const MEDIA = \"(prefers-color-scheme: dark)\";\n  const [theme, setThemeState] = useState(() => {\n    var _a;\n    const storedTheme = localStorage.getItem(ThemeProps.KEY);\n    if (storedTheme) return storedTheme;\n    if (defaultTheme === ThemeProps.SYSTEM) {\n      return ((_a = window.matchMedia) == null ? void 0 : _a.call(window, MEDIA).matches) ? ThemeProps.DARK : ThemeProps.LIGHT;\n    }\n    return defaultTheme;\n  });\n  const setTheme = useCallback(newTheme => {\n    var _a;\n    const targetTheme = newTheme === ThemeProps.SYSTEM ? ((_a = window.matchMedia) == null ? void 0 : _a.call(window, MEDIA).matches) ? ThemeProps.DARK : ThemeProps.LIGHT : newTheme;\n    localStorage.setItem(ThemeProps.KEY, newTheme);\n    document.documentElement.classList.remove(theme);\n    document.documentElement.classList.add(targetTheme);\n    setThemeState(newTheme);\n  }, [theme]);\n  const handleMediaQuery = useCallback(e => {\n    if (defaultTheme === ThemeProps.SYSTEM) {\n      setTheme(e.matches ? ThemeProps.DARK : ThemeProps.LIGHT);\n    }\n  }, [setTheme]);\n  useEffect(() => setTheme(theme), [theme, setTheme]);\n  useEffect(() => {\n    const media = window.matchMedia(MEDIA);\n    media.addEventListener(\"change\", handleMediaQuery);\n    return () => media.removeEventListener(\"change\", handleMediaQuery);\n  }, [handleMediaQuery]);\n  return {\n    theme,\n    setTheme\n  };\n}\nexport { ThemeProps, useTheme };","map":{"version":3,"names":["useCallback","useEffect","useState","ThemeProps","KEY","LIGHT","DARK","SYSTEM","useTheme","defaultTheme","MEDIA","theme","setThemeState","_a","storedTheme","localStorage","getItem","window","matchMedia","call","matches","setTheme","newTheme","targetTheme","setItem","document","documentElement","classList","remove","add","handleMediaQuery","e","media","addEventListener","removeEventListener"],"sources":["C:/Users/User/hero_invent_pro/hero_invent_pro/node_modules/@heroui/use-theme/dist/index.mjs"],"sourcesContent":["// src/index.ts\nimport { useCallback, useEffect, useState } from \"react\";\nvar ThemeProps = {\n  // localStorage key for storing the current theme\n  KEY: \"heroui-theme\",\n  // light theme\n  LIGHT: \"light\",\n  // dark theme\n  DARK: \"dark\",\n  // system theme\n  SYSTEM: \"system\"\n};\nfunction useTheme(defaultTheme = ThemeProps.SYSTEM) {\n  const MEDIA = \"(prefers-color-scheme: dark)\";\n  const [theme, setThemeState] = useState(() => {\n    var _a;\n    const storedTheme = localStorage.getItem(ThemeProps.KEY);\n    if (storedTheme) return storedTheme;\n    if (defaultTheme === ThemeProps.SYSTEM) {\n      return ((_a = window.matchMedia) == null ? void 0 : _a.call(window, MEDIA).matches) ? ThemeProps.DARK : ThemeProps.LIGHT;\n    }\n    return defaultTheme;\n  });\n  const setTheme = useCallback(\n    (newTheme) => {\n      var _a;\n      const targetTheme = newTheme === ThemeProps.SYSTEM ? ((_a = window.matchMedia) == null ? void 0 : _a.call(window, MEDIA).matches) ? ThemeProps.DARK : ThemeProps.LIGHT : newTheme;\n      localStorage.setItem(ThemeProps.KEY, newTheme);\n      document.documentElement.classList.remove(theme);\n      document.documentElement.classList.add(targetTheme);\n      setThemeState(newTheme);\n    },\n    [theme]\n  );\n  const handleMediaQuery = useCallback(\n    (e) => {\n      if (defaultTheme === ThemeProps.SYSTEM) {\n        setTheme(e.matches ? ThemeProps.DARK : ThemeProps.LIGHT);\n      }\n    },\n    [setTheme]\n  );\n  useEffect(() => setTheme(theme), [theme, setTheme]);\n  useEffect(() => {\n    const media = window.matchMedia(MEDIA);\n    media.addEventListener(\"change\", handleMediaQuery);\n    return () => media.removeEventListener(\"change\", handleMediaQuery);\n  }, [handleMediaQuery]);\n  return { theme, setTheme };\n}\nexport {\n  ThemeProps,\n  useTheme\n};\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,IAAIC,UAAU,GAAG;EACf;EACAC,GAAG,EAAE,cAAc;EACnB;EACAC,KAAK,EAAE,OAAO;EACd;EACAC,IAAI,EAAE,MAAM;EACZ;EACAC,MAAM,EAAE;AACV,CAAC;AACD,SAASC,QAAQA,CAACC,YAAY,GAAGN,UAAU,CAACI,MAAM,EAAE;EAClD,MAAMG,KAAK,GAAG,8BAA8B;EAC5C,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC5C,IAAIW,EAAE;IACN,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACb,UAAU,CAACC,GAAG,CAAC;IACxD,IAAIU,WAAW,EAAE,OAAOA,WAAW;IACnC,IAAIL,YAAY,KAAKN,UAAU,CAACI,MAAM,EAAE;MACtC,OAAO,CAAC,CAACM,EAAE,GAAGI,MAAM,CAACC,UAAU,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGL,EAAE,CAACM,IAAI,CAACF,MAAM,EAAEP,KAAK,CAAC,CAACU,OAAO,IAAIjB,UAAU,CAACG,IAAI,GAAGH,UAAU,CAACE,KAAK;IAC1H;IACA,OAAOI,YAAY;EACrB,CAAC,CAAC;EACF,MAAMY,QAAQ,GAAGrB,WAAW,CACzBsB,QAAQ,IAAK;IACZ,IAAIT,EAAE;IACN,MAAMU,WAAW,GAAGD,QAAQ,KAAKnB,UAAU,CAACI,MAAM,GAAG,CAAC,CAACM,EAAE,GAAGI,MAAM,CAACC,UAAU,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGL,EAAE,CAACM,IAAI,CAACF,MAAM,EAAEP,KAAK,CAAC,CAACU,OAAO,IAAIjB,UAAU,CAACG,IAAI,GAAGH,UAAU,CAACE,KAAK,GAAGiB,QAAQ;IACjLP,YAAY,CAACS,OAAO,CAACrB,UAAU,CAACC,GAAG,EAAEkB,QAAQ,CAAC;IAC9CG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAACjB,KAAK,CAAC;IAChDc,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAACN,WAAW,CAAC;IACnDX,aAAa,CAACU,QAAQ,CAAC;EACzB,CAAC,EACD,CAACX,KAAK,CACR,CAAC;EACD,MAAMmB,gBAAgB,GAAG9B,WAAW,CACjC+B,CAAC,IAAK;IACL,IAAItB,YAAY,KAAKN,UAAU,CAACI,MAAM,EAAE;MACtCc,QAAQ,CAACU,CAAC,CAACX,OAAO,GAAGjB,UAAU,CAACG,IAAI,GAAGH,UAAU,CAACE,KAAK,CAAC;IAC1D;EACF,CAAC,EACD,CAACgB,QAAQ,CACX,CAAC;EACDpB,SAAS,CAAC,MAAMoB,QAAQ,CAACV,KAAK,CAAC,EAAE,CAACA,KAAK,EAAEU,QAAQ,CAAC,CAAC;EACnDpB,SAAS,CAAC,MAAM;IACd,MAAM+B,KAAK,GAAGf,MAAM,CAACC,UAAU,CAACR,KAAK,CAAC;IACtCsB,KAAK,CAACC,gBAAgB,CAAC,QAAQ,EAAEH,gBAAgB,CAAC;IAClD,OAAO,MAAME,KAAK,CAACE,mBAAmB,CAAC,QAAQ,EAAEJ,gBAAgB,CAAC;EACpE,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EACtB,OAAO;IAAEnB,KAAK;IAAEU;EAAS,CAAC;AAC5B;AACA,SACElB,UAAU,EACVK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}